$py(
import sys
import os
from gates import Gates
from netlist import Netlist
sys.stdout = open( opfile, 'w' )
nl2pmldir = os.environ['NL2PMLDIR']
gates = Gates( nl2pmldir + '/gates.json' )
nl = Netlist(modelfile,gatesjson)
behavpml = nl2pmldir + '/behav.pml'
)\
#define N_STATES $(nl.nStates())
#define N_INSTS $(nl.nInsts())
#define MAX_INPS $(nl.maxInps())
#define MAX_OPS $(nl.maxOps())

$for(n,i in nl.gates.gateids.items())\
#define $(n) $(i)
$endfor\

$for(n,i in nl.gates.msgids.items())\
#define $(n) $(i)
$endfor\

$for(n,inst in nl._insts.items())\
#define $(n) $(inst.id)
$endfor\

inline printInstName(id) {
    if
$for(n in nl.instNames())\
    :: id == $(n) -> printf("$(n)")
$endfor\
    :: else -> printf("Uknown inst id",id)
    fi
}

inline printGateType(id) {
    if
$for(n in nl.gates.gateids)\
    :: id == $(n) -> printf("$(n)")
$endfor\
    :: else -> printf("Uknown gate id",id)
    fi
}

inline printMsgType(id) {
    if
$for(n in nl.gates.msgids)\
    :: id == $(n) -> printf("$(n)")
$endfor\
    :: else -> printf("Uknown msgtype",id)
    fi
}

inline initWires() {
$for(w in nl._wires.values())\
    run wire($(w.i.id),$(w.o.id)) // $(w.i.fullName()) $(w.o.fullName())
$endfor\
}

inline initInsts() {
$for(inst in nl.nonEnvInsts())\
    // initialize $(inst.name)
    c_initInst[$(inst.name)]!m_gatetype,$(inst.typ)
$for(p in inst.sortedIpins())\
    c_initInst[$(inst.name)]!m_setinp,$(p.id) // $(p.fullName())
$endfor\
$for(p in inst.sortedOpins())\
    c_initInst[$(inst.name)]!m_setop,$(p.id) // $(p.fullName())
$endfor\
    c_initInst[$(inst.name)]!m_initover,0
$endfor\
}

$include(behavpml)
