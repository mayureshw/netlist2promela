ifndef NL2PMLDIR
$(error Please set environment variable NL2PMLDIR to point to netlist2pnml directory)
endif

MODELJSON	?=	model.json
NLFILES		?=	$(filter-out $(MODELJSON), $(wildcard *.json))

export  PYTHONPATH	:=	$(NL2PMLDIR):$(PYTHONPATH)


NL2PML		=	$(NL2PMLDIR)/nl2pml.pmlt
GATESJSON	=	$(NL2PMLDIR)/gates.json
MODELS		=	$(NLFILES:.json=)
PMLFILES	=	$(foreach m,$(MODELS),$(m)/$(m).pml)
CFILES		=	$(foreach m,$(MODELS),$(m)/pan.c)
EXEFILES	=	$(foreach m,$(MODELS),$(m)/$(m).pan.out)
REPORTFILES	=	$(foreach m,$(MODELS),$(m)/$(m).report)

# Note: Settign NCORE>1 leads to "shmget shared queues: Cannot allocate memory" on NetBSD
NCORE	=	1 #$(shell /usr/bin/nproc 2>/dev/null || /sbin/sysctl -n hw.ncpu || echo 1)
MAXDEPTH=	1000000
VECTORSZ=	5000
CFLAGS	= -O3 -DVECTORSZ=$(VECTORSZ) -DPRINTF -DNCORE=$(NCORE)

define pmlrule
$1/$1.pml: $(MODELJSON)	$1.json
	mkdir -p $1
	expander.py --eval="gatesjson,modelfile,propfile,opfile='$(GATESJSON)','$(MODELJSON)','$1.json','$1/$1.pml'" $(NL2PML)

$1/pan.c:	$1/$1.pml
	cd $1 && spin -a $1.pml

$1/$1.pan.out:	$1/pan.c
	cc $(CFLAGS) -o $1/$1.pan.out $1/pan.c

$1/$1.report:	$1/$1.pan.out
	cd $1 && ./$1.pan.out -m$(MAXDEPTH) -av | tee $1.report
	@echo NOTE Use $1.pan.out -r for detailed trace
	@echo NOTE Use spin -t $1.pml to analyze trace
	@echo "NOTE Add -DNP to CLAGS and run with -rl for deadlocks (non progress cycles)"
	@echo NOTE Use lbltrace.sh to label states in a trace file
	@echo NOTE Do check forks listeed at the bottom of $1.pml for need of constraints

endef

all:	$(REPORTFILES)

$(foreach m,$(MODELS),$(eval $(call pmlrule,$m)))
